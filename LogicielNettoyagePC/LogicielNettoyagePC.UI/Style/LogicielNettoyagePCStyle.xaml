<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:LogicielNettoyagePC.UI.Converters"
                    xmlns:resx="clr-namespace:LogicielNettoyagePC.UI">

    <!--#region Border-->
    <Style x:Key="Header" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#007791"/>
    </Style>

    <Style x:Key="CopyRightPart" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="LightGray"/>
    </Style>

    <Style x:Key="BottomPart" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="RosyBrown"/>
    </Style>

    <Style x:Key="SeparatePart" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#f9f9f9"/>
        <Setter Property="Height" Value="10"/>
    </Style>

    <Style x:Key="Frame" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#007791"/>
    </Style>

    <Style x:Key="FrameColor" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#007791"/>
        <Setter Property="Background" Value="#f9f9f9"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="30 0 30 0"/>
    </Style>
    <!--#endregion-->

    <!--#region Label-->
    <Style x:Key="TopLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Arial Nova"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="HeaderText" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Arial Nova"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="CaptionLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#023d4a"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
    </Style>

    <Style x:Key="InformationText" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="InformationTextWhite" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
    </Style>

    <Style x:Key="CopyRightText" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="OperationInProgressLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource TextLabel}">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontStyle" Value="Italic"/>
    </Style>

    <Style x:Key="VersionText" TargetType="{x:Type Label}" BasedOn="{StaticResource TextLabel}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="LabelSmallText" TargetType="{x:Type Label}" BasedOn="{StaticResource TextLabel}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!--#endregion-->

    <!--#region Button-->
    <Style x:Key="BigButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#007791"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="20 12"/>
    </Style>

    <Style x:Key="BigButtonWhite" TargetType="{x:Type Button}" BasedOn="{StaticResource BigButton}">
        <Setter Property="Background" Value="White"/>
    </Style>
    
    <Style x:Key="SmallButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#007791"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Padding" Value="20 0 20 0"/>
    </Style>

    <Style x:Key="SmallButtonWhite" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#007791"/>
        <Setter Property="Padding" Value="2 0 2 0"/>
    </Style>

    <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5 0 5 0"/>
    </Style>

    <Style x:Key="AnalyzeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BigButton}" >
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TransparantButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--#endregion Button-->

    <!--#region TextBlock-->
    <Style x:Key="TextBlockInformationStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBlockDirectorySize" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#a36666"/>
        <Setter Property="FontStyle" Value="Italic"/>
    </Style>

    <Style x:Key="TextBlockTriggerIsValid" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsValid}" 
                     Value="False">
                <Setter Property="FontStyle" Value="Italic"/>
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DirectoryNameStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockTriggerIsValid}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#023d4a" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    
    <Style x:Key="DirectoryNameSympleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#023d4a" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="FontStyle" Value="Normal"/>

    </Style>

    <Style x:Key="DirectoryPathStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockTriggerIsValid}">
        <Setter Property="Foreground" Value="#072126" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBlockCaption" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#023d4a" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
    </Style>

    <Style x:Key="TextBlockCaption12" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="Foreground" Value="#023d4a" />
    </Style>

    <Style x:Key="TextBlockInformationError" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
        <Setter Property="Foreground" Value="#a36666" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBlockCaption12Wrap" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockCaption12}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>

    </Style>

    <!--#endregion TextBlock-->

    <!--#region TextBox-->
    <Style x:Key="TextBoxSmall" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#007791"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial Nova Light"/>
    </Style>
    <!--#endregion TextBox-->

    <!--#region DataTemplate-->
    <DataTemplate x:Key="DirectoryControlTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="10 10 10 0"
                          IsChecked="{Binding NeedToClean}" Visibility="{Binding ShowDirectorySize, Converter={converters:BooleanToVisibility}}" />
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="0 10 0 0"
                                          Text="{Binding DirectoryName}" 
                                          Style="{StaticResource DirectoryNameStyle}" IsEnabled="{Binding IsValid}"/>
            <TextBlock Grid.Row="0" Grid.Column="3" Margin="10 10 0 0" Visibility="{Binding ShowDirectorySize, Converter={converters:BooleanToVisibility}}"
                                          Text="{Binding DirectorySize, Converter={converters:LongToMbString}}"
                                          Style="{StaticResource TextBlockDirectorySize}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DirectorySettingsControlTemplate">
        <Grid Margin="0 10 0 5">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock  Grid.Row="0" Grid.Column="0" 
                        Text="{Binding DirectoryName}"  Style="{StaticResource DirectoryNameStyle}"  />

            <StackPanel  Grid.Row="0" Grid.Column="1" Margin="5 0 0 0" Orientation="Horizontal" VerticalAlignment="Center" >
                <Button  Style="{StaticResource DeleteButton}" Margin="20 0 0 0" VerticalAlignment="Center"
                         ToolTip="{x:Static resx:ResourceFR.DeleteFolder}"
                         Command ="{Binding DataContext.DeleteDirectoryCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                         CommandParameter="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource TemplatedParent}}">
                    <Image Source="{DynamicResource Delete}" Width="15" Height="15" VerticalAlignment="Center"/>
                </Button>
                <TextBlock Text="{x:Static resx:ResourceFR.FolderInvalid}"  Style="{StaticResource TextBlockInformationError}" VerticalAlignment="Center"
                        Visibility="{Binding IsValid, Converter={converters:InverseBooleanToVisibility}}" />
            </StackPanel>

            <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 5 0 0"
                       Text="{Binding DirectoryPath}"  Style="{StaticResource DirectoryPathStyle}" ToolTip="{Binding DirectoryPath}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DirectorySympleViewControlTemplate">
        <Grid Margin="10 5 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <TextBlock  Grid.Row="0" Style="{StaticResource DirectoryNameSympleStyle}"
                        Text="{Binding DirectoryName}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="VerificationControlTemplate">
        <Expander>
            <Expander.Header>
                <TextBlock Grid.Row="0" Margin="10 10 0 0" VerticalAlignment="Center"
                                          Text="{Binding VerificationDate}" 
                                          Style="{StaticResource DirectoryNameStyle}"/>
            </Expander.Header>

            <ItemsControl
                        ItemsSource="{Binding  Directories}"
                        KeyboardNavigation.TabNavigation="Cycle"
                        ItemTemplate ="{StaticResource DirectorySympleViewControlTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel
                                    IsItemsHost="True"
                                    Background="LightGray" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Margin" Value="20 0 0 5" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Expander>

    </DataTemplate>
    <!--#endregion-->

</ResourceDictionary>